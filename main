#include <iostream>

struct Nabor {
	int jersey;
	int socks;

	bool IsFull() const {
		return jersey != 0 && socks != 0;
	}

	bool IsEmpty() const {
		return jersey == 0 && socks == 0;
	}

	bool HaveJersey() const {
		return jersey != 0;
	}

	bool HaveSocks() const {
		return socks != 0;
	}
};
int main() {
	Nabor blue, red;
	std::cin >> blue.jersey >> red.jersey >> blue.socks >> red.socks;
	if (blue.IsEmpty() || red.IsEmpty()) {
		std::cout << 1 << ' ' << 1;
	} 
	else if (!blue.IsFull()) {
		if (!blue.HaveJersey()) {
			std::cout << 1 << ' ' << blue.socks + 1;
		}
		else {
			std::cout << blue.jersey + 1 << ' ' << 1;
		}
	}
	else if(!red.IsFull()) {
		if (!red.HaveJersey()) {
			std::cout << 1 << ' ' << red.socks + 1;
		}
		else {
			std::cout << red.jersey + 1 << ' ' << 1;
		}
	}
	else if (blue.jersey + red.jersey == 2) {
		std::cout << 2 << ' ' << 1;
	}
	else if (blue.socks + red.socks == 2) {
		std::cout << 1 << ' ' << 2;
	}
	else {
		int min_jersey = std::min(blue.jersey, red.jersey) + 1;
		int min_socks = std::min(blue.socks, red.socks) + 1;

		int max_plus_jersey = std::max(blue.jersey, red.jersey) + 1;
		int max_plus_socks = std::max(blue.socks, red.socks) + 1;

		if ((min_jersey - 1 == blue.jersey && min_socks - 1 == red.socks) ||
			(min_jersey - 1 == red.jersey && min_socks - 1 == blue.socks)) {
			if (max_plus_jersey - min_jersey <= max_plus_socks - min_socks) {
				min_jersey = max_plus_jersey;
			}
			else {
				min_socks = max_plus_socks;
			}
		}
		int minimum = min_jersey + min_socks;

		if (max_plus_jersey < minimum && max_plus_socks < minimum) {
			if (max_plus_jersey < max_plus_socks) {
				std::cout << max_plus_jersey << ' ' << 1;
			}
			else {
				std::cout << 1 << ' ' << max_plus_socks;
			}
		}
		else if (max_plus_jersey < minimum) {
			std::cout << max_plus_jersey << ' ' << 1;

		}
		else if (max_plus_socks < minimum) {
			std::cout << 1 << ' ' << max_plus_socks;
		}
		else {
			std::cout << min_jersey << ' ' << min_socks;
		}
	}
}
